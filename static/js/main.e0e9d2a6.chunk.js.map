{"version":3,"sources":["ExtLink/ExtLink.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","Title/Title.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","TrancheField/TrancheField.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","ConnectBox/ConnectBox.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","FlexLoader/FlexLoader.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","this","props","children","Component","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","id","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","length","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","borderRadius","mainColor","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundButton","boxShadow","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","status","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isInteractive","isActive","isDisabled","my","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","transactions","actionBg","redeem","textProps","Title","lineHeight","HeadingComponent","component","Heading","h1","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","rowId","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","TrancheField","ready","loadField","fieldName","fieldInfo","fieldProps","addGovTokens","output","_args","undefined","protocol","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","_ref11","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseToken","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","t1","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","oldContract","raw","_ref48","_callee34","_context34","_x40","_x41","abi","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","getCachedData","addr","msg","payload","end","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","getTokenDecimals","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","checkMigration","_ref66","_callee55","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context55","getContractBalance","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","methods","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","sendTxWithPermit","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","encodeABI","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","sendBiconomyTxWithPersonalSign","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args67","_context67","net","getId","round","nonceMethod","pow","allowed","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","f","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","checkTokenApproved","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","gte","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","tranchePool","_ref90","_ref91","staked1","lastPrice1","_ref92","_ref93","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref94","_ref95","rewardsTokens","incentiveTokens","govTokens","_args74","_context74","AA","BB","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","loadAssetField","_ref96","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref97","_ref98","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref99","_ref100","amountLentCurve1","redeemableBalanceCurve","_ref101","_ref102","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref103","_ref104","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref105","_ref106","tokenPriceFirstDeposit","_ref107","_ref108","daysFirstDeposit","earningsPerc","depositTimestamps","_govTokenConfig","_ref109","_ref110","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref111","_ref112","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref113","_ref114","amountLentCurve2","redeemableBalanceCurve1","_ref115","_ref116","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref117","_callee76","idleTokenSupply","_args76","_context76","getTokenTotalSupply","_x144","getIdleTokenPriceWithFee","_ref118","_callee77","_ref119","_ref120","fee","priceWFee","_args77","_context77","eq","_x145","_x146","_ref121","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref122","_callee79","_ref123","_ref124","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref126","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","initContract","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref127","_callee83","incidentsInfo","_ref128","_ref129","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref130","_callee82","cover","coverId","claimSubmittedEvent","_ref131","_ref132","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref133","_ref134","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref135","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref137","_callee85","currBatchIndex","batchIndex","_ref138","_ref139","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref140","_callee87","fixDecimals","_args87","_context87","_x155","_ref141","_callee88","_ref142","_ref143","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref144","_callee89","totalSupply","_args89","_context89","_x158","_ref145","_callee90","_args90","_context90","_x159","_ref146","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref147","_callee92","_context92","_x162","_x163","getAprs","_ref148","_callee93","_context93","addresses","_x164","genericIdleCall","_ref149","_callee94","callParams","_args94","_context94","_x165","_ref150","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref151","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref152","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref154","_callee99","_context99","getBlock","_x174","_ref155","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref156","_callee101","_args101","_context101","_x177","_x178","_ref157","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref158","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref159","_callee104","unlentBalance","_context104","_x183","_ref160","_callee105","_args105","_context105","_x184","_ref161","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref165","_ref166","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref162","_callee106","_ref163","_ref164","protocolBalance","protocolAllocation","_context106","functions","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref167","_callee108","pairAddresses","_ref168","_ref169","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref170","_ref171","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref172","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref173","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref174","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref175","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref178","_ref179","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref183","_callee118","_ref184","_ref185","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","migrationContractInfo","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref191","_callee123","coinIndex","curveIdleTokens","_context123","migrationParams","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref193","_callee125","_ref194","_ref195","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref196","_callee128","_args128","_context128","_ref197","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref198","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref199","_callee130","uneven_amounts","depositContract","_ref200","_ref201","virtualPrice","Sv","_args130","_context130","_x204","_x205","_ref202","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref203","_ref204","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref206","_callee132","_ref207","_ref208","_context132","_x207","getStkAaveApr","_ref209","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref210","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref211","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref212","_callee137","cTokenInfo","compoundAllocationPerc","_ref213","_ref214","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref216","_callee138","_ref217","_ref218","_context138","_x214","_callee141","_args141","_context141","_ref220","_callee140","_ref221","_ref222","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref224","_callee143","strategy","_context143","_ref225","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","govToken","convertToken","_args146","_context146","_ref227","_callee145","compTokenBalance","_context145","_x218","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref228","_callee148","govTokensUserDistribution","_args148","_context148","_ref229","_callee147","_context147","_x220","_x219","_ref230","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref231","_callee149","govSpeed","_context149","_x222","_x221","getGovTokensAprs","_ref232","_callee152","govTokensAprs","_args152","_context152","_ref233","_callee151","_ref234","_ref235","_ref236","_ref237","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref239","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref241","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref242","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref243","_callee158","_context158","_x231","_x232","_ref244","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref246","_callee161","_context161","_ref247","_callee160","_context160","_x236","_x237","_x235","getTokenFees","_callee163","_args163","_context163","_callee164","_ref250","_ref251","feePercentage","gain","fees","_args164","_context164","_ref252","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref255","_callee169","_context169","_ref256","_callee168","oldTokenTVL","idleTokenName","_ref257","_ref258","oldTokenConfig","_ref262","_ref263","oldTokenPrice","oldTotalSupply","_context168","showAUM","_ref259","_callee167","_ref260","_ref261","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","oldProtocols","oldProtocol","protocolPos","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref267","_callee175","_context175","_ref268","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref269","_callee173","_ref270","_ref271","_context173","_x244","_x243","_x242","getTokenApy","_ref272","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref274","_callee179","_context179","_ref275","_callee178","_ref276","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref278","_callee181","tokenContract","_context181","_x248","_ref279","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref280","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref281","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","getTokenScore","_ref282","_callee186","_ref283","_ref284","tokenScore","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref285","_callee187","scores","_context187","_x258","_x259","_ref286","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref287","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref288","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","placement","Staking","selectedOption","toolProps","SelectedComponent","AssetField","selectToken","FlexLoader","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","cdoCoolingPeriod","latestHarvestBlock","stakeCoolingPeriod","userStakeBlock","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","hex","borderBottom","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","selectedSection","TranchePage","loadTransactions","src_TrancheDetails_TrancheDetails","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","earningsEnd","earningsStart","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","userHasFunds","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","urlParams","param2","param1","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this4","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","showTooltip","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","distributionSpeed","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","IdleStaking","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","param3","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","preventDefault","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","rgb","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","TransactionListFilters","isOpened","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","customFieldName","customFieldProps","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.e0e9d2a6.chunk.js","sourcesContent":["import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('lastTranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!tranchePrice.isNaN() && !tokenBalance.isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (poolSize){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let tranchePool = await this.genericContractCallCached(tokenConfig.CDO.name,'virtualBalance',[trancheConfig.address]);\n        // console.log('tranchePool',tokenConfig,trancheConfig,output);\n        if (tranchePool){\n          output = this.fixTokenDecimals(tranchePool,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n        // staked = staked || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'lastTranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'lastTranchePrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(tokenConfig.CDO.name,'getRewards'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import { Flex, Text } from \"rimble-ui\";\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      blockNumber,\n      tokenBalance,\n      trancheBalance,\n      cdoCoolingPeriod,\n      latestHarvestBlock,\n      stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n    // console.log('loadData',cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock);\n\n    const canUnstake = this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    this.setState({\n      activeModal:'share'\n    })\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            style:{\n              border:`3px solid ${trancheDetails.color.hex}`\n            }\n          }}\n          titleProps={{\n            pb:2,\n            fontSize:[3,4]\n          }}\n          titleParentProps={{\n            ml:0,\n            mt:0,\n            mb:3,\n            style:{\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }\n          }}\n          title={trancheDetails.name}\n        >\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            py={2}\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Deposited\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staked\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Redeemable\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheRedeemable',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[2,0]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              text={'Tranches'}\n              isMobile={this.props.isMobile}\n              path={[this.functionsUtil.capitalize(this.props.selectedProtocol),this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            \n          </Flex>\n        </Flex>\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - Tranche\n        </Title>\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'AA'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['AA']}\n            />\n          </Flex>\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'BB'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['BB']}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n    const selectedToken = this.props.urlParams.param2;\n    const selectedProtocol = this.props.urlParams.param1;\n    const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n    if (tokenConfig){\n      this.setState({\n        tokenConfig,\n        selectedToken,\n        selectedProtocol,\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      const route = `${this.props.selectedSection.route}/${protocol}/${token}`;\n      // console.log('selectTranche',route);\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.functionsUtil.BNify(this.state.portfolio.totalBalance).gt(0) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'SENIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      title:'JUNIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    BB:{\n      color:{\n        hex:'#2196f3',\n        rgb:[33, 150, 243],\n        hsl:['207', '90%', '54%']\n      },\n      name:'Junior Tranche',\n      description:{\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    AA:{\n      color:{\n        hex:'#4caf50',\n        rgb:[76, 175, 80],\n        hsl:['122', '39%', '49%']\n      },\n      name:'Senior Tranche',\n      description:{\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:false,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:12875386,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0x675a1378777cc2d25dbf430a28738cb6b7a3f8c2'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0xa8c7b9c4F18B227Abc4b099bA92d6a1CfEb9649C'\n        },\n        label:'idleDAI AA',\n        blockNumber:12875386,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xe524EE80584b120c4df8c2f130AE571ed6C196DB'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x0962fB33A7E0172d0E413b0fab003bEe5142E6B6'\n        },\n        label:'idleDAI BB',\n        blockNumber:12875386,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x95a2834AFDC65dd7f28585d2d992367600afb457'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}