{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","CustomField/CustomField.js","CustomList/CustomList.js","ExtLink/ExtLink.js","Title/Title.js","AssetField/AssetField.js","RoundButton/RoundButton.js","ImageButton/ImageButton.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isActive","isDisabled","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","async","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","getLastAllocations","_ref178","_callee110","tokenAllocations","_context110","_ref179","_callee109","_context109","_x192","_x193","_x191","_ref180","_callee111","protocolsAprs","_ref181","_ref182","govTokensBalances","_args111","_context111","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x194","getSushiswapPoolTokenPrice","_ref183","_callee112","pairAddresses","_ref184","_ref185","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref186","_ref187","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context112","getSushiswapConversionRate","_x195","_x196","_ref188","_callee113","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context113","_x197","_x198","_ref189","_callee114","unires","_context114","addressForPrice","_x199","_x200","getCurveDepositedTokens","_ref190","_callee115","idleTokensBalances","remainingCurveTokens","_args115","_context115","_x201","getCurveUnevenTokenAmounts","_ref191","_callee116","amounts","max_burn_amount","unevenAmounts","_context116","getCurveDepositContract","_x202","_x203","_callee117","curveRatesInfo","_context117","strategyTokens","getCurveAPYContract","_callee118","blocksForPrevTokenPrice","_ref194","_ref195","prevTokenPrice","blocksMultiplier","curveAPR","_context118","getCurveTokenSupply","_callee119","_context119","getCurvePoolContract","_callee120","_args120","_context120","_callee121","_args121","_context121","_ref199","_callee122","_ref200","_ref201","_context122","_x204","_callee123","depositContractInfo","_context123","getCurveZapContract","_callee124","zapContractInfo","_context124","_callee125","poolContractInfo","_context125","getCurveSwapContract","_callee126","migrationContractInfo","_context126","getCurveIdleTokensAmounts","_callee128","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args128","_context128","_ref207","_callee127","coinIndex","curveIdleTokens","_context127","migrationParams","_x205","getCurveTokensAmounts","_callee130","useCoinIndex","_args130","_context130","_ref209","_callee129","_ref210","_ref211","idleTokenPrice","totalTokenSupply","_context129","_x206","getCurveAmounts","_ref212","_callee132","_args132","_context132","_ref213","_callee131","_context131","_x209","_x207","_x208","getCurveTokenAmount","_ref214","_callee133","_args133","_context133","_x210","getCurveSlippage","_ref215","_callee134","uneven_amounts","depositContract","_ref216","_ref217","Sv","_args134","_context134","_x211","_x212","_ref218","_callee135","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref219","_ref220","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args135","_context135","IAaveIncentivesController","emissionPerSecond","_x213","_callee137","_args137","_context137","_ref222","_callee136","_ref223","_ref224","_context136","_x214","getStkAaveApr","_ref225","_callee138","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args138","_context138","_x215","_x216","getCompAPR","_ref226","_callee139","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args139","_context139","_x217","_x218","getCompSpeed","_ref227","_callee140","cTokenAddress","compSpeed","_context140","_x219","_ref228","_callee141","cTokenInfo","compoundAllocationPerc","_ref229","_ref230","cTokenTotalSupply","compoundPoolShare","_args141","_context141","_x220","_callee143","_args143","_context143","_ref232","_callee142","_ref233","_ref234","_context142","_x221","_callee145","_args145","_context145","_ref236","_callee144","_ref237","_ref238","compApr","_context144","_x222","getTokensCsv","_callee148","csv","_context148","prototype","sum","pv","cv","avg","_ref240","_callee147","strategy","_context147","_ref241","_callee146","header","aprAvg","scoreAvg","lastRow","_context146","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x224","_x223","_callee150","govToken","convertToken","_args150","_context150","_ref243","_callee149","compTokenBalance","_context149","_x225","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref244","_callee152","govTokensUserDistribution","_args152","_context152","_ref245","_callee151","_context151","_x227","_x226","_ref246","_callee154","govTokensDistribution","tokenGovTokens","_args154","_context154","_ref247","_callee153","govSpeed","_context153","_x229","_x228","getGovTokensAprs","_ref248","_callee156","govTokensAprs","_args156","_context156","_ref249","_callee155","_ref250","_ref251","_ref252","_ref253","cTokenConfig","_context155","aprTooltipMode","_x232","_x230","_x231","_callee158","_args158","_context158","_ref255","_callee157","govTokenBalance","tokenConversionRate","fromTokenConfig","_context157","_x233","_callee159","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args159","_context159","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref257","_callee161","govTokensAmounts","_context161","getGovTokensUserAmounts","_ref258","_callee160","_context160","getGovTokenAddessByIndex","_x236","_x237","_x234","_x235","_ref259","_callee162","_context162","_x238","_x239","_ref260","_callee163","_context163","_x240","_x241","_callee166","govTokenConfigForced","_args166","_context166","_ref262","_callee165","_context165","_ref263","_callee164","_context164","_x243","_x244","_x242","getTokenFees","_callee167","_args167","_context167","_callee168","_ref266","_ref267","feePercentage","gain","fees","_args168","_context168","_ref268","_callee169","_args169","_context169","_x245","getTotalTVL","_callee170","tokensTVL","_context170","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee174","_context174","_ref271","_callee173","_context173","_ref272","_callee172","oldTokenTVL","idleTokenName","_ref273","_ref274","oldTokenConfig","_ref278","_ref279","oldTokenPrice","oldTotalSupply","_context172","showAUM","_ref275","_callee171","_ref276","_ref277","govTokenConversionRate","govTokenBalanceConverted","_context171","_x248","oldProtocols","oldProtocol","protocolPos","_x247","_x246","getSubstackLatestFeed","_callee175","endpointInfo","idleSubstackFeed","latestFeed","_context175","items","getAggregatedStats","_callee176","tvls","totalAUM","_args176","_context176","getAggregatedStats_chain","_callee180","avgAPR","_args180","_context180","_ref283","_callee179","_context179","_ref284","_callee178","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context178","_ref285","_callee177","_ref286","_ref287","_context177","_x251","_x250","_x249","getTokenApy","_ref288","_callee181","_context181","_x252","getTokensToMigrate","_callee184","tokensToMigrate","_args184","_context184","_ref290","_callee183","_context183","_ref291","_callee182","_ref292","_context182","_x254","_x253","getProtocolsTokensBalances","_callee186","tokenBalances","minTokenBalance","protocolsTokens","_args186","_context186","_ref294","_callee185","tokenContract","_context185","_x255","_ref295","_callee187","_args187","_context187","_x256","_x257","_x258","getAvgAPYStats","_ref296","_callee188","apiResults","_args188","_context188","_x259","_x260","_ref297","_callee189","count","_conversionRate","_args189","_context189","_x261","_x262","getTokenScore","_ref298","_callee190","_ref299","_ref300","tokenScore","_context190","protocolScore","getTokenScoreApi","_x263","_x264","_ref301","_callee191","scores","_context191","_x265","_x266","_ref302","_callee192","idleGovTokenShowAPR","idleAPR","_args192","_context192","_x267","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","selectToken","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","placeholder","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","_this4","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","goBack","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","crToken","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,wBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKdomH,cAAe,CACbhtH,SAAU,GACV65C,IAAK08E,GACLvwC,SAAU,OACVzyC,UAAW,OACX3sC,KAAM,kBACN8L,MAAO,kBACPjH,QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,yBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKdqmH,cAAe,CACbjtH,SAAU,GACV65C,IAAK08E,GACLvwC,SAAU,OACVzyC,UAAW,OACX3sC,KAAM,kBACN8L,MAAO,kBACPjH,QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,yBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKd6vH,cAAe,CACbz2H,SAAU,GACV65C,IAAK08E,GACLvwC,SAAU,OACVzyC,UAAW,OACX3sC,KAAM,kBACN8L,MAAO,kBACPjH,QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,yBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKd8vH,cAAe,CACb12H,SAAU,GACV65C,IAAK08E,GACLvwC,SAAU,OACVzyC,UAAW,OACX3sC,KAAM,kBACN8L,MAAO,kBACPjH,QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,yBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKd+vH,cAAe,CACb32H,SAAU,GACV65C,IAAK08E,GACLvwC,SAAU,OACVzyC,UAAW,OACX3sC,KAAM,kBACN8L,MAAO,kBACPjH,QAAS,6CACT6zB,kBAAmB,CACjBua,IAAK28E,GACL5vH,KAAM,yBACN6E,QAAS,6CACTs2F,UAAW,CACT,CACE31F,MAAO,UACPxF,KAAM,cAKdgwH,YAAa,CACX52H,SAAU,GACV65C,IAAK08E,GACLvw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","file":"static/js/main.0d23d458.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    \"near-black\": \"#111\",\n    \"dark-gray\": \"#4e4e4e\",\n    \"mid-gray\": \"#999\",\n    gray: \" #e0e0e0\",\n    grey: \"#CCC\",\n    silver: \"#999\",\n    \"light-silver\": \"#aaa\",\n    \"moon-gray\": \"#ccc\",\n    \"light-gray\": \"#eee\",\n    \"near-white\": \"#f4f4f4\",\n\n    white: \"#fff\",\n    transparent: \"transparent\",\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n      return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n    });\n    return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n      lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n      return lastAllocations;\n    },{});\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution_2',aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution_4',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport IDLE from \"../contracts/IDLE.json\";\nimport WETH from \"../abis/tokens/WETH.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport Tranches from \"../Tranches/Tranches\";\nimport COMP from \"../abis/compound/COMP.json\";\nimport aToken from \"../abis/aave/AToken.json\";\nimport TokenSwap from \"../TokenSwap/TokenSwap\";\nimport yDAIv3 from \"../abis/iearn/yDAIv3.json\";\nimport LpStaking from \"../LpStaking/LpStaking\";\nimport stkIDLE from \"../contracts/stkIDLE.json\";\nimport yUSDCv3 from \"../abis/iearn/yUSDCv3.json\";\nimport yUSDTv3 from \"../abis/iearn/yUSDTv3.json\";\nimport ySUSDv3 from \"../abis/iearn/ySUSDv3.json\";\nimport yTUSDv3 from \"../abis/iearn/yTUSDv3.json\";\nimport Timelock from \"../contracts/Timelock.json\";\nimport CurveZap from \"../abis/curve/CurveZap.json\";\nimport CovToken from \"../abis/cover/CovToken.json\";\nimport B2BVester from \"../contracts/B2BVester.json\";\nimport IdleStaking from \"../IdleStaking/IdleStaking\";\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport EarlyRewards from \"../contracts/EarlyRewards.json\";\nimport CoverProtocol from \"../CoverProtocol/CoverProtocol\";\nimport CurveDeposit from \"../abis/curve/CurveDeposit.json\";\nimport VesterFactory from \"../contracts/VesterFactory.json\";\nimport GovernorAlpha from \"../contracts/GovernorAlpha.json\";\nimport EcosystemFund from \"../contracts/EcosystemFund.json\";\nimport Comptroller from \"../abis/compound/Comptroller.json\";\nimport erc20Forwarder from \"../contracts/erc20Forwarder.json\";\nimport BalancerPool from \"../abis/balancer/BalancerPool.json\";\nimport IdleController from \"../contracts/IdleController.json\";\nimport TokenMigration from \"../TokenMigration/TokenMigration\";\nimport BatchMigration from \"../BatchMigration/BatchMigration\";\nimport IdleBatchedMint from \"../contracts/IdleBatchedMint.json\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport IdleProxyMinter from \"../contracts/IdleProxyMinter.json\";\nimport IdleRebalancerV3 from \"../contracts/IdleRebalancerV3.json\";\nimport LiquidityGaugeV2 from \"../abis/curve/LiquidityGaugeV2.json\";\nimport DeployB2BVesting from \"../DeployB2BVesting/DeployB2BVesting\";\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    baseRoute: \"/governance\",\n    props: {\n      tokenName: \"IDLE\",\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.png\",\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: [\"idleFEIYield\",\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"], // Disable IDLE distribution for idleToken\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: \"stkAAVE\",\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: \"aavev2\",\n      aprTooltipMode: false,\n      distributionMode: \"second\",\n      color: \"hsl(314, 41%, 51%)\",\n      distributionFrequency: \"day\",\n      address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\", // MAIN\n      addressForPrice: \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\", // MAIN\n      disabledTokens: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"],\n    }\n  },\n  contracts: {\n    ProxyFactory: {\n      abi: MinimalInitializableProxyFactory,\n      address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n    },\n    LockedIDLE: {\n      abi: LockedIDLE,\n      address: \"0xF241a0151841AE2E6ea750D50C5794b5EDC31D99\"\n    },\n    FeeTreasury: {\n      abi: FeeTreasury,\n      address: \"0x69a62c24f16d4914a48919613e8ee330641bcb94\" // MAIN\n    },\n    PriceOracle: {\n      abi: PriceOracle,\n      address: \"0x972A64d108e250dF98dbeac8170678501f5EF181\" // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock: {\n      abi: Timelock,\n      address: \"0xD6dABBc2b275114a2366555d6C481EF08FDC2556\" // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund: {\n      abi: EcosystemFund,\n      address: \"0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7\" // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory: {\n      abi: VesterFactory,\n      address: \"0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972\" // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController: {\n      abi: IdleController,\n      address: \"0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE\" // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards: {\n      abi: EarlyRewards,\n      address: \"0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc\" // MAIN\n      // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha: {\n      abi: GovernorAlpha,\n      address: \"0x2256b25CFC8E35c3135664FD03E77595042fe31B\" // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller: {\n      abi: Comptroller,\n      address: \"0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b\" // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter: {\n      abi: SushiV2Router02,\n      address: \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\"\n    },\n    UniswapRouter: {\n      abi: UniswapV2Router02,\n      address: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n    },\n    BalancerExchangeProxy: {\n      abi: BalancerExchangeProxy,\n      address: \"0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21\"\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\n      \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\n          \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\n          \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\n        \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\n        \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\n        \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/rates/\"\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: \"https://api.idle.finance/tvls/\"\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: \"https://api.idle.finance/substack/\"\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/scores/\"\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY\n        ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` }\n        : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: \"#F7B24A\",\n          hsl: [\"40\", \"95%\", \"59%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 2]\n        },\n        startTimestamp: \"2020-02-11\",\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        icon: \"images/tokens/IDLE.png\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n\n      \"idleDAI+idleUSDC+idleUSDT\": {\n        decimals: 18,\n        enabled: false,\n        name: \"Curve.fi\",\n        color: {\n          hex: \"#ff0000\",\n          rgb: [255, 0, 0],\n          hsl: [\"0\", \"100%\", \"50%\"]\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: {\n    // Network configurations\n    availableNetworks: {\n      1: \"Mainnet\",\n      3: \"Ropsten\",\n      4: \"Rinkeby\",\n      42: \"Kovan\",\n      1337: \"Hardhat\"\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    firstBlockNumber: 8119247,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 42, 1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        42: \"https://kovan.infura.io/v3/\",\n        1: \"https://mainnet.infura.io/v3/\",\n        1337: \"https://mainnet.infura.io/v3/\"\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: \"https://api.etherscan.io/api\",\n          1337: \"https://api.etherscan.io/api\",\n          42: \"https://api-kovan.etherscan.io/api\"\n        },\n        baseUrl: {\n          1: \"https://etherscan.io\",\n          1337: \"https://etherscan.io\",\n          42: \"https://kovan.etherscan.io\"\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.png\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:\n        'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: \"ETH Wrapper\",\n      route: \"eth-wrapper\",\n      subComponent: TokenWrapper,\n      image: \"images/tokens/WETH.svg\",\n      desc: \"Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.\",\n      props: {\n        startContract: {\n          name: \"ETH\",\n          token: \"ETH\",\n          decimals: 18,\n          wrapMethod: \"deposit\"\n        },\n        destContract: {\n          abi: WETH,\n          name: \"WETH\",\n          decimals: 18,\n          token: \"WETH\",\n          unwrapMethod: \"withdraw\",\n          address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n        }\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      label: \"Cover Protocol\",\n      route: \"cover-protocol\",\n      subComponent: CoverProtocol,\n      image: \"images/protocols/cover-logo.svg\",\n      desc: \"Get your Idle Portfolio covered against Smart Contract risk\",\n      fileClaimUrl:\n        \"https://app.coverprotocol.com/app/claims/new?protocol=IDLE\",\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: \"CoverMint\",\n          address: \"0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0\"\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\n        \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      depositEnabled: false,\n      icon: \"FileDownload\",\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\n        \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      label: \"Token Migration\",\n      desc:\n        \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      icon: \"AddCircleOutline\",\n      route: \"add-funds\",\n      label: \"Add Funds\",\n      desc: \"Buy tokens with your Bank account, Credit card or Ethereum Wallet\",\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams =\n            globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency\n                ? props.tokenConfig.wyre.destCurrency\n                : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols: [\n          {\n            decimals: 28,\n            token: 'cDAI',\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: ['beta'],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach(key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null) {\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) =>\n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled &&\n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          currentEnv={this.state.currentEnv}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setToken={e => { this.setToken(e) }}\n                                />\n\n                                {this.state.route === \"onboarding\" ? (\n                                  <Web3Debugger\n                                    web3={web3}\n                                    account={account}\n                                    accountBalance={accountBalance}\n                                    accountBalanceToken={accountBalanceToken}\n                                    accountBalanceLow={accountBalanceLow}\n                                    initAccount={initAccount}\n                                    rejectAccountConnect={rejectAccountConnect}\n                                    userRejectedConnect={userRejectedConnect}\n                                    accountValidated={accountValidated}\n                                    accountValidationPending={accountValidationPending}\n                                    rejectValidation={rejectValidation}\n                                    userRejectedValidation={userRejectedValidation}\n                                    validateAccount={validateAccount}\n                                    connectAndValidateAccount={connectAndValidateAccount}\n                                    modals={modals}\n                                    network={network}\n                                    transaction={transaction}\n                                  />\n                                ) : null}\n\n                                {this.state.route === \"default\" ? (\n                                  <Switch>\n                                    <Route exact path=\"/\"\n                                      render={(props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Landing\n                                            {...props}\n                                            web3={web3}\n                                            network={network}\n                                            account={account}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            contracts={contracts}\n                                            initContract={initContract}\n                                            innerWidth={this.state.width}\n                                            logout={this.logout.bind(this)}\n                                            innerHeight={this.state.height}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            cachedData={this.state.cachedData}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            selectedTab={this.state.selectedTab}\n                                            tokenConfig={this.state.tokenConfig}\n                                            accountBalanceLow={accountBalanceLow}\n                                            getAccountBalance={getAccountBalance}\n                                            availableTranches={availableTranches}\n                                            customAddress={this.state.customAddress}\n                                            selectedToken={this.state.selectedToken}\n                                            accountBalanceToken={accountBalanceToken}\n                                            closeToastMessage={this.closeToastMessage}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            processCustomParam={this.processCustomParam}\n                                            availableTokens={this.state.availableTokens}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            updateSelectedTab={this.selectTab.bind(this)}\n                                            toastMessageProps={this.state.toastMessageProps}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            setToken={e => { this.setToken(e) }}\n                                          />\n                                          <CookieConsent\n                                            expires={365}\n                                            buttonText={\"Ok\"}\n                                            location={\"bottom\"}\n                                            acceptOnScroll={true}\n                                            cookieName={\"cookieAccepted\"}\n                                            acceptOnScrollPercentage={5}\n                                            style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                            buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                          >\n                                            <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                              <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                              <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                            </Flex>\n                                          </CookieConsent>\n                                        </Suspense>\n                                      }\n                                    ></Route>\n                                    <Route exact path=\"/terms-of-service\">\n                                      <Tos />\n                                    </Route>\n                                    <Route>\n                                      <PageNotFound />\n                                    </Route>\n                                  </Switch>\n                                ) : null}\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}