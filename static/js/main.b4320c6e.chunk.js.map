{"version":3,"sources":["SmartNumber/SmartNumber.js","TranchesList/TranchesList.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","TrancheField/TrancheField.js","Title/Title.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","RoundButton/RoundButton.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","ExtLink/ExtLink.js","CustomField/CustomField.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","TranchesList","state","prevProps","prevState","enabledProtocols","availableTranches","depositedTokens","id","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","assign","cols","isMobile","colsProps","isDeposit","map","token","tokenConfig","protocol","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","addTokenName","tranche","rowId","concat","trancheConfig","AA","BB","cardId","key","fieldComponent","TrancheField","protocolConfig","trancheType","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","path","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","componentUnmounted","loadData","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","children","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheRewardTokensInfo","_ref31","_callee20","tokensDistribution","_context20","_ref32","_callee19","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","totalAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref33","_ref34","_firstHarvest","_latestHarvest","firstBlock","_ref35","_ref36","poolSize","elapsedBlocks","elapsedSeconds","_context19","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","getBlockInfo","returnValues","total","_x16","_x14","_x15","_ref37","_callee22","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref38","_ref39","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context22","sort","_ref40","_callee21","trancheTokenTransferEvent","tokenTransferEvent","_ref41","_ref42","blockInfo","tokenConversionRate","_context21","_x20","trancheTokenAmount","hashKey","trancheTokens","_x17","_x18","_x19","getTrancheUserTransactions","_ref43","_callee23","_context23","_x21","_x22","_x23","getTrancheFirstDepositTx","_ref44","_callee24","_context24","_x24","_x25","_x26","getAmountDepositedTranche","_ref45","_callee25","_context25","_x27","_x28","_x29","_ref46","_callee26","_ref47","_ref48","userAvgPrice","_context26","_x30","_x31","getAmountLent","_callee27","amountLents","_args27","_context27","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee33","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref51","_ref52","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args33","_context33","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref53","_callee28","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context28","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x32","_ref54","_callee29","_context29","_x33","match","_ref55","_callee30","_context30","_x34","_ref56","_callee31","_context31","_x35","items","to_address","_ref57","_callee32","polygonTx","_context32","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x36","getPolygonBaseTxs","_callee34","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args34","_context34","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee35","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args35","_context35","filterEthereumTxs","_callee36","_args36","_context36","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee37","resultData","_resultData","allAvailableTokens","_args37","_context37","processStoredTxs","t1","_callee38","contractInstance","_context38","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref63","_callee39","_ref64","_ref65","_context39","getTransactionReceipt","_x37","_ref66","_callee40","_args40","_context40","_x38","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref67","_callee41","processTransactions","idleTokensAddresses","_args41","_context41","mappedTx","_x39","_x40","filterEtherscanTxs","_ref68","_callee42","processTxs","_args42","_context42","_x41","_ref69","_callee43","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args43","_context43","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x42","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref70","_callee48","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args48","_context48","baseTokenConfig","baseTokenAddress","_ref71","_callee47","minedTxs","_context47","_ref72","_callee46","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context46","getCurveTokenPrice","_ref73","_callee44","_context44","_x47","_x48","baseTokensConfig","t2","_ref74","_callee45","_context45","_x49","_x50","_x45","_x46","_x44","_x43","_ref75","_callee54","txsToProcess","_args54","_context54","_ref76","_callee53","_context53","_ref77","_callee52","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context52","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref78","_callee49","_context49","_x55","_x56","_ref79","_callee50","_context50","_x57","_x58","oldContract","events","raw","_ref80","_callee51","_context51","_x59","_x60","abi","decodeLog","_token","_x53","_x54","_x52","_x51","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref81","_callee55","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args55","_context55","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x61","getBestTranche","_callee56","maxApy","trancheTypes","trancheStrategyConfig","_args56","_context56","timetamp","splice","availableTrancheInfo","tInfo","_ref83","_callee57","error_callback","config","_args57","_context57","post","catch","_x62","_ref84","_callee58","_args58","_context58","_x63","_ref85","_callee59","apiKeyIndex","apiKey","_args59","_context59","_x64","_ref86","_callee60","return_data","_args60","_context60","_x65","makeCachedPostRequest","_ref87","_callee61","_args61","_context61","_x66","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee62","page","googlePageviewInfo","isOrigin","_args62","_context62","ga","_ref89","_callee64","googleEventsInfo","debugEnabled","originOk","_args64","_context64","analytics","google","addPostfixForTestnet","availableNetworks","_ref90","_callee63","_context63","hitCallback","hitCallbackFail","_x68","_x69","_x67","createContract","_ref91","_callee65","_context65","_x70","_x71","_x72","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee68","activeOnly","whitelist","proposals","validProposals","_args68","_context68","addr","_ref93","_callee67","checkedStrategies","_context67","end","author","snapshot","strategies","_ref94","_callee66","tokenContract","_context66","_x74","_x73","getAprsFromApi","_callee69","endpointInfo","aprs","_args69","_context69","_ref96","_callee70","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args70","_context70","_x75","getTokenExchangeRate","_ref97","_callee71","exchangeRateParams","exchangeRate","_context71","_x76","_x77","getTokenDecimals","_ref98","_callee72","_context72","_x78","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee73","idleTokenConfig","feeDistributorConfig","_context73","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee74","contractPaused","_args74","_context74","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref101","_callee76","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context76","lastAllocationsPromise","_ref102","_callee75","lastAllocations","_context75","_x80","_x81","alloc","_x79","_ref103","_callee77","oldContractBalance","oldContractTokenDecimals","oldContractName","_context77","_x82","_x83","_ref104","_callee78","eventName","fromBlock","toBlock","blocksPerCall","lastBlockNumber","calls","_toBlock","all_past_events","_args78","_context78","getBlockNumber","getContractPastEvents","_x84","_x85","estimateMethodGasUsage","_ref105","_callee79","methodParams","_contract$methods","functionCall","gasLimit","_ref106","_ref107","_args79","_context79","getGasPrice","estimateGas","_x86","_x87","_ref108","_callee80","userAddress","signedParameters","callback_receipt","_contract$methods2","_context80","on","once","confirmationNumber","receipt","_x88","_x89","_x90","_x91","_x92","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref109","_callee81","biconomyInfo","res","_context81","limits","apiId","headers","x-api-key","_x93","sendTxWithPermit","_ref110","_callee82","_contract$methods3","messageToSign","_this$getSignaturePar","_context82","encodeABI","personal","sign","_x94","_x95","_x96","_x97","_x98","_x99","buildBiconomyErc20ForwarderTx","_ref111","_callee83","permitType","callData","buildParams","_context83","txGas","erc20ForwarderClient","buildTx","_x100","_x101","_x102","_x103","_x104","_ref112","_callee85","_context85","_ref113","_callee84","_context84","_x106","_x107","_x105","sendBiconomyTxWithErc20Forwarder","_ref114","_callee86","req","metaInfo","txResponse","fetchReceiptIntervalId","_context86","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x108","_x109","_x110","_x111","sendBiconomyTxWithPersonalSign","_ref115","_callee87","_this$getSignaturePar2","_context87","getNonce","_x112","_x113","_x114","_x115","signPermitEIP2612","_ref116","_callee88","erc20Name","owner","spender","deadline","domain","permit","domainData","_context88","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x116","_x117","_x118","_x119","_x120","_x121","_x122","_x123","signPermit","_ref117","_callee89","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args89","_context89","net","getId","round","nonceMethod","pow","allowed","response","_x124","_x125","_x126","_ref118","_callee90","permitParams","methodAbi","useNonce","_args90","_context90","_jsonInterface","f","unshift","_x127","_x128","_x129","_x130","_x131","_x132","_x133","sendSignedTx","_ref119","_callee91","MetaTransaction","dataToSign","_context91","_x134","_x135","_x136","_x137","_x138","checkTokenApproved","_ref120","_callee92","contractAddr","walletAddr","_ref121","_ref122","allowance","_context92","getAllowance","gte","_x139","_x140","_x141","_ref123","_callee93","_context93","_x142","_x143","_x144","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee95","highestValue","_args95","_context95","lendRates","aprInfo","tokenAPR","_ref125","_callee94","_context94","_x145","_ref126","_callee96","_args96","_context96","_x146","_x147","_ref127","_callee98","_args98","_context98","_ref128","_callee97","tokenGlobalConfig","stakingRewardsContract","_context97","_x150","_x148","_x149","_ref129","_callee99","field","addGovTokens","_args99","_context99","loadTrancheField","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_ref130","_callee100","formatValue","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref131","_ref132","totalSupply","virtualPrice","_ref133","_ref134","lastPrice1","staked1","_ref135","_ref136","deposited1","lastPrice","_ref137","_ref138","redeemable1","staked2","_ref139","_ref140","earningsStart","trancheApy2","deposited3","earningsEnd","_ref141","_ref142","trancheFee","earningsCounter","feesEnd","feesStart","_ref143","_ref144","deposited4","redeemable3","_ref145","_ref146","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref147","_ref148","_ref149","_ref150","earningsPerc","secondsFromFirstTx","_ref151","_ref152","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args100","_context100","Strategy","genericContractCallCachedTTL","initContract","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x159","_x160","_x161","_x162","_x163","_x164","_x165","loadAssetField","_ref153","_callee101","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref154","_ref155","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref156","_ref157","amountLentCurve1","redeemableBalanceCurve","_ref158","_ref159","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref160","_ref161","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref162","_ref163","tokenPriceFirstDeposit","_ref164","_ref165","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref166","_ref167","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref168","_ref169","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref170","_ref171","amountLentCurve2","redeemableBalanceCurve1","_ref172","_ref173","redeemableBalance2","_args101","_context101","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x166","_x167","_x168","_x169","getIdleTokenSupply","_ref174","_callee102","idleTokenSupply","_args102","_context102","_x170","getIdleTokenPriceWithFee","_ref175","_callee103","_ref176","_ref177","fee","priceWFee","_args103","_context103","eq","_x171","_x172","_ref178","_callee104","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args104","_context104","_x173","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref179","_callee105","_ref180","_ref181","idleTokensTotalSupply","userShare","_context105","_x174","_x175","openWindow","open","getActiveCoverages","_callee107","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args107","_context107","coverages","_ref183","_callee106","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context106","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x176","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref184","_callee109","incidentsInfo","_ref185","_ref186","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context109","directProps","startBlock","contractInfo","buyer","_ref187","_callee108","cover","coverId","claimSubmittedEvent","_ref188","_ref189","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref190","_ref191","_context108","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x178","_x177","getBatchedDepositExecutions","_ref192","_callee110","_context110","_x179","getBatchedDeposits","_callee112","filter_by_status","batchDepositConfig","batchedDeposits","_args112","_context112","_ref194","_callee111","currBatchIndex","batchIndex","_ref195","_ref196","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context111","_x180","getETHBalance","_ref197","_callee113","fixDecimals","_args113","_context113","_x181","_ref198","_callee114","_ref199","_ref200","_args114","_context114","ERC20","_x182","_x183","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref201","_callee115","_args115","_context115","_x184","_ref202","_callee116","_args116","_context116","_x185","_ref203","_callee117","_args117","_context117","_x186","_x187","getProtocolBalance","_ref204","_callee118","_context118","_x188","_x189","getAprs","_ref205","_callee119","_context119","addresses","_x190","genericIdleCall","_ref206","_callee120","callParams","_args120","_context120","_x191","_ref207","_callee121","_contract$methods4","_args121","_context121","_x192","_x193","_ref208","_callee123","_args123","_context123","_ref209","_callee122","_context122","_x195","_x196","_x194","getTxDecodedLogs","_ref210","_callee125","logAddr","decodeLogs","internalTransfers","_context125","_ref211","_callee124","_context124","_x201","_x202","_x197","_x198","_x199","_x200","blocksToSeconds","blocks","blocksPerSeconds","_callee126","_context126","_callee127","blockInfoToSave","_args127","_context127","getBlock","_ref214","_callee128","_args128","_context128","getPastEvents","_x203","_x204","_ref215","_callee129","_args129","_context129","_x205","_x206","_ref216","_callee130","_args130","_context130","_x207","_x208","cachedContractCall","_ref217","_callee131","_args131","_context131","_x209","_x210","_ref218","_callee132","_contract$methods5","_args132","_context132","_x211","_x212","_ref219","_callee133","async","_args133","_context133","_x213","_x214","getUnlentBalance","_ref220","_callee134","unlentBalance","_context134","_x215","_ref221","_callee135","_args135","_context135","_x216","getLastAllocations","_ref222","_callee137","tokenAllocations","_context137","_ref223","_callee136","_context136","_x218","_x219","_x217","_ref224","_callee138","protocolsAprs","_ref225","_ref226","govTokensBalances","_args138","_context138","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x220","getSushiswapPoolTokenPrice","_ref227","_callee139","_ref228","_ref229","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref230","_ref231","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context139","getSushiswapConversionRate","_x221","_ref232","_callee140","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context140","_x222","_x223","_ref233","_callee141","useWETH","unires","_args141","_context141","addressForPrice","_x224","_x225","getCurveDepositedTokens","_ref234","_callee142","idleTokensBalances","remainingCurveTokens","_args142","_context142","_x226","getCurveUnevenTokenAmounts","_ref235","_callee143","amounts","max_burn_amount","unevenAmounts","_context143","getCurveDepositContract","_x227","_x228","_callee144","curveRatesInfo","_args144","_context144","_callee145","_context145","strategyTokens","getCurveAPYContract","_callee146","blocksForPrevTokenPrice","_ref239","_ref240","prevTokenPrice","blocksMultiplier","curveAPR","_context146","getCurveTokenSupply","_callee147","_context147","getCurvePoolContract","_callee148","_args148","_context148","_callee149","_args149","_context149","_ref244","_callee150","_ref245","_ref246","_context150","_x229","_callee151","depositContractInfo","_context151","getCurveZapContract","_callee152","zapContractInfo","_context152","_callee153","poolContractInfo","_context153","getCurveSwapContract","_callee154","migrationContractInfo","_context154","getCurveIdleTokensAmounts","_callee156","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args156","_context156","_ref252","_callee155","coinIndex","curveIdleTokens","_context155","migrationParams","_x230","getCurveTokensAmounts","_callee158","useCoinIndex","_args158","_context158","_ref254","_callee157","_ref255","_ref256","idleTokenPrice","totalTokenSupply","_context157","_x231","getCurveAmounts","_ref257","_callee160","_args160","_context160","_ref258","_callee159","_context159","_x234","_x232","_x233","getCurveTokenAmount","_ref259","_callee161","_args161","_context161","_x235","getCurveSlippage","_ref260","_callee162","uneven_amounts","depositContract","_ref261","_ref262","Sv","_args162","_context162","_x236","_x237","_ref263","_callee163","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref264","_ref265","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args163","_context163","IAaveIncentivesController","emissionPerSecond","_x238","_callee165","_args165","_context165","_ref267","_callee164","_ref268","_ref269","_context164","_x239","getWMaticApr","_ref270","_callee166","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args166","_context166","_x240","_x241","getStkAaveApr","_ref271","_callee167","aaveConversionRate","stkAaveAPR","stkAaveValue","_args167","_context167","_x242","_x243","getCompAPR","_ref272","_callee168","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args168","_context168","_x244","_x245","getCompSpeed","_ref273","_callee169","cTokenAddress","compSpeed","_context169","_x246","_ref274","_callee170","cTokenInfo","compoundAllocationPerc","_ref275","_ref276","cTokenTotalSupply","compoundPoolShare","_args170","_context170","_x247","_callee172","_args172","_context172","_ref278","_callee171","_ref279","_ref280","_context171","_x248","_callee174","_args174","_context174","_ref282","_callee173","_ref283","_ref284","compApr","_context173","_x249","getTokensCsv","_callee177","csv","_context177","prototype","sum","pv","cv","avg","_ref286","_callee176","_context176","_ref287","_callee175","rates","header","rows","aprAvg","scoreAvg","lastRow","_context175","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x251","_x250","_callee179","convertToken","_args179","_context179","_ref289","_callee178","compTokenBalance","_context178","_x252","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref290","_callee181","govTokensUserDistribution","_args181","_context181","_ref291","_callee180","_context180","_x254","_x253","getGovTokensDistributionSpeed","_ref292","_callee183","govTokensDistribution","_args183","_context183","_ref293","_callee182","govSpeed","_context182","_x256","_x255","getGovTokensAprs","_ref294","_callee185","govTokensAprs","_args185","_context185","_ref295","_callee184","_ref296","_ref297","_ref298","_ref299","cTokenConfig","_context184","aprTooltipMode","_x259","_x257","_x258","_callee187","_args187","_context187","_ref301","_callee186","govTokenBalance","fromTokenConfig","_context186","_x260","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee188","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args188","_context188","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref303","_callee190","govTokensAmounts","_context190","getGovTokensUserAmounts","_ref304","_callee189","govTokenIndex","govTokenAddress","_context189","getGovTokenAddessByIndex","_x263","_x264","_x261","_x262","_ref305","_callee191","_context191","_x265","_x266","_ref306","_callee192","_context192","_x267","_x268","_callee195","govTokenConfigForced","_args195","_context195","_ref308","_callee194","_context194","_ref309","_callee193","_context193","_x270","_x271","_x269","getTokenFees","_callee196","_args196","_context196","_callee197","_ref312","_ref313","feePercentage","gain","fees","_args197","_context197","_ref314","_callee198","_args198","_context198","_x272","getTotalTVL","_callee199","tokensTVL","_context199","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee203","_context203","_ref317","_callee202","_context202","_ref318","_callee201","oldTokenTVL","idleTokenName","_ref319","_ref320","oldTokenConfig","_ref324","_ref325","oldTokenPrice","oldTotalSupply","_context201","showAUM","_ref321","_callee200","_ref322","_ref323","govTokenConversionRate","govTokenBalanceConverted","_context200","_x275","oldProtocols","oldProtocol","protocolPos","_x274","_x273","getSubstackLatestFeed","_callee204","idleSubstackFeed","latestFeed","_context204","getTrancheAggregatedStats","_callee208","totalAUM","_args208","_context208","_ref328","_callee207","_context207","_ref329","_callee206","_context206","_ref330","_callee205","_ref331","_ref332","_context205","_x278","_x277","_x276","getAggregatedStats","_callee210","allNetworks","networkIds","_args210","_context210","_ref334","_callee209","tvls","_context209","getAggregatedStats_chain","_x279","_callee214","avgAPR","_args214","_context214","_ref336","_callee213","_context213","_ref337","_callee212","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context212","_ref338","_callee211","_ref339","_ref340","_context211","_x282","_x281","_x280","getTokenApy","_ref341","_callee215","_context215","_x283","getTokensToMigrate","_callee218","_args218","_context218","_ref343","_callee217","_context217","_ref344","_callee216","_ref345","_context216","_x285","_x284","getProtocolsTokensBalances","_callee220","tokenBalances","minTokenBalance","protocolsTokens","_args220","_context220","_ref347","_callee219","_context219","_x286","getTokenConversionRateField","_ref348","_callee221","_args221","_context221","_x287","_x288","_ref349","_callee222","_args222","_context222","_x289","_x290","_x291","getAvgAPYStats","_ref350","_callee223","apiResults","_args223","_context223","_x292","_x293","_ref351","_callee224","statsTokenConfig","ToTokenConfig","_args224","_context224","addressForPriceFrom","_x294","_ref352","_callee225","count","_conversionRate","_args225","_context225","_x295","_x296","getTokenScore","_ref353","_callee226","_ref354","_ref355","tokenScore","_context226","protocolScore","getTokenScoreApi","_x297","_x298","_ref356","_callee227","scores","_context227","_x299","_x300","_ref357","_callee228","idleGovTokenShowAPR","idleAPR","_args228","_context228","_x301","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","textTransform","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","transactionSucceeded","isStake","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","Button","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD3CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","_args8","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.b4320c6e.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            \n               depositedTokens.map( token => {\n                const tokenConfig=this.props.availableTranches[token.protocol][token.token]\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token.token}\n                    addTokenName={false}\n                    tranche={token.tranche}\n                    protocol={token.protocol}\n                    rowId={`tranche-col-${token.protocol}`}\n                    tokenConfig={tokenConfig}\n                    trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                    cardId={`tranche-card-${token.protocol}`}\n                    key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            \n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n                const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo_1',trancheConfig.name,trancheConfig.blockNumber,'underlyingEventsFilters',underlyingEventsFilters);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, fromBlock=0, toBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = toBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(toBlock);\n    fromBlock = parseInt(fromBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(fromBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      return this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n    /*\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n    */\n  }\n};\nexport default availableTranches;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={}\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche]\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={}\n            }\n            remainingTranches[protocol][tranche]={}\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche]\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.4\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4546;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4548,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4549,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4550,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4551,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4552,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4553,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4554,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4555,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4556,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4557,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4558,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4559,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4560,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4561,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4562,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4563,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4564,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4565,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4566,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4567,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4592,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4593,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4594,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4595,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4596,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4597,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4598,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4600,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4601,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4602,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4603,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4604,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4605,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4607,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4608,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4609,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4610,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4611,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4613,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4614,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4615,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4616,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4619,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4620,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4621,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4622,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4623,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4624,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4625,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4626,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4627,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4628,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4629,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4630,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4633,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4634,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4635,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4636,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4637,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4638,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4639,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4640,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4642,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4643,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4644,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4645,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4646,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4647,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4648,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4649,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4650,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4652,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4653,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4654,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4655,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4656,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4657,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4658,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4659,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4660,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4661,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4662,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4663,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4664,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4665,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4666,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4667,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4668,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4669,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4670,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4671,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4672,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4673,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4674,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4675,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4676,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4677,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4678,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4679,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4680,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4681,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4682,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4683,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4684,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4685,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4686,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4687,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4688,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4689,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4690,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4691,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4692,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4693,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4694,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4695,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4696,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4697,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4698,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4699,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4700,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4701,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4702,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4703,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4704,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4705,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4706,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4707,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4708,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4709,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4710,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4711,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4712,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4713,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4714,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4715,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4716,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4717,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4718,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4719,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4720,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4721,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4722,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4723,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4724,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4725,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4726,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4727,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4728,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4729,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4730,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4731,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4732,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4733,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4734,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4735,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4736,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4737,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4738,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4739,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4740,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4741,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4742,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4743,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4744,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4745,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4746,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4747,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4748,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4749,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4750,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4751,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4752,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4753,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4754,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4755,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4756,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4757,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4758,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4759,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4760,\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./networks.json\": 1958,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4761,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4762,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4763,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4764,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4765,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4766,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4767,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4768,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4769,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4770,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4771,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4772,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4773,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4774,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4775,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4776,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4777,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4778,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4779,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4780,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4805,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4806,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4807,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4808,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4809,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4810,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4811,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4813,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4814,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4815,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4816,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4817,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4818,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4820,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4821,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4822,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4823,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4824,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4826,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4827,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4828,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4829,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4832,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4833,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4834,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4835,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4836,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4837,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4838,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4839,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4840,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4841,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4842,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4843,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4846,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4847,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4848,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4849,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4850,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4851,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4852,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4853,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4855,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4856,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4858,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4859,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4860,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4861,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4862,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4863,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4865,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4866,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4867,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4868,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4869,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4870,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4871,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4872,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4873,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4874,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4875,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4876,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4877,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4878,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4879,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4880,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4881,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4882,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4883,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4884,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4885,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4886,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4887,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4888,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4889,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4890,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4891,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4892,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4893,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4894,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4895,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4896,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4897,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4898,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4899,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4900,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4901,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4902,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4903,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4904,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4905,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4906,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4907,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4908,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4909,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4910,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4911,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4912,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4913,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4914,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4915,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4916,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4917,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4918,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4919,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4920,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4921,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4922,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4923,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4924,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4925,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4926,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4927,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4928,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4929,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4930,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4931,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4932,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4933,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4934,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4935,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4936,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4937,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4938,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4939,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4940,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4941,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4942,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4943,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4944,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4945,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4946,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4947,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4948,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4949,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4950,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4951,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4952,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4953,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4954,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4955,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4956,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4957,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4958,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4959,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4960,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4961,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4962,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4963,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4964,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4965,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4966,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4967,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4968,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4969,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4970,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4971,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4972,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4973,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4547;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}