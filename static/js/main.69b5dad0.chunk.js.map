{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","NetworkIndicator/NetworkIndicator.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/components/BuyModal.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","RoundButton/RoundButton.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","Title/Title.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","getGlobalConfig","networkId","networkConfig","value","config","label","requiredNetwork","getRequiredNetwork","find","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","innerProps","px","py","customOptionProps","pr","options","CustomOptionValue","imageSrc","data","provider","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","mr","src","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","cursor","backgroundColor","isCorrectNetwork","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","isInteractive","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","margin","my","align","image","imageProps","useIconOnly","icon","iconColor","iconProps","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","v","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","flexBasis","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","CustomInputContainer","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","_x5","payments","providers","getInitParams","t0","render","analytics","google","events","enabled","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","baseToken","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","j","countries","remoteResources","url","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","methods","method","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","web3RpcKey","web3Rpc","ethereum","Web3","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","current","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref34","_ref35","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref36","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x25","_ref37","_callee24","_context24","_x26","match","_ref38","_callee25","_context25","_x27","_ref39","_callee26","_context26","_x28","items","to_address","_ref40","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","lastStateId","call","checkPolygonTransactionIncluded","_ref46","_callee34","_ref47","_ref48","_context34","getTransactionReceipt","_x30","_ref49","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref50","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref51","_callee37","processTxs","_args37","_context37","_x34","_ref52","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref53","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref54","_callee42","minedTxs","_context42","_ref55","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref56","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref57","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref58","_callee49","txsToProcess","_args49","_context49","_ref59","_callee48","_context48","_ref60","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref61","_callee44","_context44","_x48","_x49","_ref62","_callee45","_context45","_x50","_x51","oldContract","raw","_ref63","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","_ref64","_callee50","error_callback","_args50","_context50","catch","_x54","_ref65","_callee51","apiKeyIndex","apiKey","_args51","_context51","message","_x55","_ref66","_callee52","return_data","_args52","_context52","_x56","code","errorCode","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref68","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","addPostfixForTestnet","_ref69","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref70","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","end","_ref72","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref73","_callee57","_context57","_x64","_x63","_ref74","_callee60","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","statsConfig","filteredCachedData","_filteredData","apiInfo","filteredData","_args60","_context60","_x65","getTokenExchangeRate","_ref75","_callee61","exchangeRateParams","exchangeRate","_context61","_x66","_x67","getTokenDecimals","_ref76","_callee62","_context62","_x68","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee63","idleTokenConfig","feeDistributorConfig","_context63","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee64","contractPaused","_args64","_context64","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref79","_callee66","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context66","lastAllocationsPromise","_ref80","_callee65","lastAllocations","_context65","_x70","_x71","alloc","_x69","checkMigration","_ref81","_callee67","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context67","getContractBalance","_x72","_x73","_ref82","_callee68","eventName","_args68","_context68","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref83","_callee69","methodParams","_contract$methods","functionCall","gasLimit","_ref84","_ref85","_args69","_context69","getGasPrice","estimateGas","_x76","_x77","_ref86","_callee70","userAddress","signedParameters","callback_receipt","_contract$methods2","_context70","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref87","_callee71","biconomyInfo","res","_context71","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref88","_callee72","_contract$methods3","messageToSign","_this$getSignaturePar","_context72","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref89","_callee73","permitType","callData","buildParams","_context73","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref90","_callee75","_context75","_ref91","_callee74","_context74","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref92","_callee76","req","metaInfo","txResponse","fetchReceiptIntervalId","_context76","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref93","_callee77","_this$getSignaturePar2","_context77","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref94","_callee78","erc20Name","owner","spender","deadline","domain","permit","domainData","_context78","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref95","_callee79","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args79","_context79","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref96","_callee80","permitParams","methodAbi","useNonce","_args80","_context80","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref97","_callee81","MetaTransaction","dataToSign","_context81","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref98","_callee82","contractAddr","walletAddr","_ref99","_ref100","allowance","_context82","getAllowance","gte","_x129","_x130","_x131","_ref101","_callee83","_context83","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref102","_callee84","stakedBalance","_args84","_context84","_x135","_x136","getTrancheStakingRewards","_ref103","_callee86","_context86","_ref104","_callee85","tokenGlobalConfig","_context85","_x139","_x137","_x138","_ref105","_callee87","field","addGovTokens","_args87","_context87","loadTrancheField","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref106","_callee88","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref107","_ref108","totalSupply","virtualPrice","_ref109","_ref110","staked1","lastPrice1","_ref111","_ref112","deposited1","lastPrice","_ref113","_ref114","redeemable1","staked2","_ref115","_ref116","earningsStart","trancheApy2","deposited3","earningsEnd","_ref117","_ref118","trancheFee","earningsCounter","feesStart","feesEnd","_ref119","_ref120","deposited4","redeemable3","_ref121","_ref122","deposited2","redeemable2","_ref123","_ref124","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref125","_ref126","rewardsTokens","incentiveTokens","govTokens","_args88","_context88","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref127","_callee89","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref128","_ref129","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref130","_ref131","amountLentCurve1","redeemableBalanceCurve","_ref132","_ref133","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref134","_ref135","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref136","_ref137","tokenPriceFirstDeposit","_ref138","_ref139","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref140","_ref141","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref142","_ref143","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref144","_ref145","amountLentCurve2","redeemableBalanceCurve1","_ref146","_ref147","redeemableBalance2","_args89","_context89","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref148","_callee90","idleTokenSupply","_args90","_context90","_x159","getIdleTokenPriceWithFee","_ref149","_callee91","_ref150","_ref151","fee","priceWFee","_args91","_context91","eq","_x160","_x161","_ref152","_callee92","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args92","_context92","_x162","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref153","_callee93","_ref154","_ref155","idleTokensTotalSupply","userShare","_context93","_x163","_x164","open","_callee95","coverProtocolConfig","nexusMutualConfig","_args95","_context95","_ref157","_callee94","coverage","coverageTokens","protocolImage","_context94","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref158","_callee97","incidentsInfo","_ref159","_ref160","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context97","directProps","startBlock","contractInfo","buyer","_ref161","_callee96","cover","coverId","claimSubmittedEvent","_ref162","_ref163","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref164","_ref165","_context96","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref166","_callee98","_context98","_x168","getBatchedDeposits","_callee100","filter_by_status","batchDepositConfig","batchedDeposits","_args100","_context100","_ref168","_callee99","currBatchIndex","batchIndex","_ref169","_ref170","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context99","_x169","getETHBalance","_ref171","_callee101","fixDecimals","_args101","_context101","_x170","_ref172","_callee102","_ref173","_ref174","_args102","_context102","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","body","isValidJSON","_ref175","_callee103","_args103","_context103","_x173","_ref176","_callee104","_args104","_context104","_x174","_ref177","_callee105","_args105","_context105","_x175","_x176","getProtocolBalance","_ref178","_callee106","_context106","_x177","_x178","getAprs","_ref179","_callee107","_context107","addresses","_x179","genericIdleCall","_ref180","_callee108","callParams","_args108","_context108","_x180","_ref181","_callee109","_contract$methods4","_args109","_context109","_x181","_x182","_ref182","_callee111","_args111","_context111","_ref183","_callee110","_context110","_x184","_x185","_x183","getTxDecodedLogs","_ref184","_callee113","logAddr","decodeLogs","internalTransfers","_context113","_ref185","_callee112","_context112","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee114","_context114","_ref187","_callee115","_context115","getBlock","_x192","_ref188","_callee116","_args116","_context116","getPastEvents","_x193","_x194","_ref189","_callee117","_args117","_context117","_x195","_x196","cachedContractCall","_ref190","_callee118","_args118","_context118","_x197","_x198","_ref191","_callee119","_contract$methods5","_args119","_context119","_x199","_x200","_ref192","_callee120","_args120","_context120","_x201","_x202","getUnlentBalance","_ref193","_callee121","unlentBalance","_context121","_x203","_ref194","_callee122","_args122","_context122","_x204","getLastAllocations","_ref195","_callee124","tokenAllocations","_context124","_ref196","_callee123","_context123","_x206","_x207","_x205","_ref197","_callee125","protocolsAprs","_ref198","_ref199","govTokensBalances","_args125","_context125","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref200","_callee126","_ref201","_ref202","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref203","_ref204","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context126","getSushiswapConversionRate","_x209","_ref205","_callee127","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context127","_x210","_x211","_ref206","_callee128","unires","_context128","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref207","_callee129","idleTokensBalances","remainingCurveTokens","_args129","_context129","_x214","getCurveUnevenTokenAmounts","_ref208","_callee130","amounts","max_burn_amount","unevenAmounts","_context130","getCurveDepositContract","_x215","_x216","_callee131","curveRatesInfo","_context131","strategyTokens","getCurveAPYContract","_callee132","blocksForPrevTokenPrice","_ref211","_ref212","prevTokenPrice","blocksMultiplier","curveAPR","_context132","getCurveTokenSupply","_callee133","_context133","getCurvePoolContract","_callee134","_args134","_context134","_callee135","_args135","_context135","_ref216","_callee136","_ref217","_ref218","_context136","_x217","_callee137","depositContractInfo","_context137","getCurveZapContract","_callee138","zapContractInfo","_context138","_callee139","poolContractInfo","_context139","getCurveSwapContract","_callee140","migrationContractInfo","_context140","getCurveIdleTokensAmounts","_callee142","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args142","_context142","_ref224","_callee141","coinIndex","curveIdleTokens","_context141","migrationParams","_x218","getCurveTokensAmounts","_callee144","useCoinIndex","_args144","_context144","_ref226","_callee143","_ref227","_ref228","idleTokenPrice","totalTokenSupply","_context143","_x219","getCurveAmounts","_ref229","_callee146","_args146","_context146","_ref230","_callee145","_context145","_x222","_x220","_x221","getCurveTokenAmount","_ref231","_callee147","_args147","_context147","_x223","getCurveSlippage","_ref232","_callee148","uneven_amounts","depositContract","_ref233","_ref234","Sv","_args148","_context148","_x224","_x225","_ref235","_callee149","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref236","_ref237","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args149","_context149","IAaveIncentivesController","emissionPerSecond","_x226","_callee151","_args151","_context151","_ref239","_callee150","_ref240","_ref241","_context150","_x227","getWMaticApr","_ref242","_callee152","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args152","_context152","_x228","_x229","getStkAaveApr","_ref243","_callee153","aaveConversionRate","stkAaveAPR","stkAaveValue","_args153","_context153","_x230","_x231","getCompAPR","_ref244","_callee154","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args154","_context154","_x232","_x233","getCompSpeed","_ref245","_callee155","cTokenAddress","compSpeed","_context155","_x234","_ref246","_callee156","cTokenInfo","compoundAllocationPerc","_ref247","_ref248","cTokenTotalSupply","compoundPoolShare","_args156","_context156","_x235","_callee158","_args158","_context158","_ref250","_callee157","_ref251","_ref252","_context157","_x236","_callee160","_args160","_context160","_ref254","_callee159","_ref255","_ref256","compApr","_context159","_x237","getTokensCsv","_callee163","csv","_context163","prototype","sum","pv","cv","avg","_ref258","_callee162","strategy","_context162","_ref259","_callee161","rates","header","aprAvg","scoreAvg","lastRow","_context161","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee165","govToken","convertToken","_args165","_context165","_ref261","_callee164","compTokenBalance","_context164","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref262","_callee167","govTokensUserDistribution","_args167","_context167","_ref263","_callee166","_context166","_x242","_x241","getGovTokensDistributionSpeed","_ref264","_callee169","govTokensDistribution","_args169","_context169","_ref265","_callee168","govSpeed","_context168","_x244","_x243","getGovTokensAprs","_ref266","_callee171","govTokensAprs","_args171","_context171","_ref267","_callee170","_ref268","_ref269","_ref270","_ref271","cTokenConfig","_context170","aprTooltipMode","_x247","_x245","_x246","_callee173","_args173","_context173","_ref273","_callee172","govTokenBalance","tokenConversionRate","fromTokenConfig","_context172","_x248","_callee174","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args174","_context174","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref275","_callee176","govTokensAmounts","_context176","getGovTokensUserAmounts","_ref276","_callee175","govTokenIndex","_context175","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref277","_callee177","_context177","_x253","_x254","_ref278","_callee178","_context178","_x255","_x256","_callee181","govTokenConfigForced","_args181","_context181","_ref280","_callee180","_context180","_ref281","_callee179","_context179","_x258","_x259","_x257","getTokenFees","_callee182","_args182","_context182","_callee183","_ref284","_ref285","feePercentage","gain","fees","_args183","_context183","_ref286","_callee184","_args184","_context184","_x260","getTotalTVL","_callee185","tokensTVL","_context185","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee189","_context189","_ref289","_callee188","_context188","_ref290","_callee187","oldTokenTVL","idleTokenName","_ref291","_ref292","oldTokenConfig","_ref296","_ref297","oldTokenPrice","oldTotalSupply","_context187","showAUM","_ref293","_callee186","_ref294","_ref295","govTokenConversionRate","govTokenBalanceConverted","_context186","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee190","endpointInfo","idleSubstackFeed","latestFeed","_context190","getAggregatedStats","_callee192","allNetworks","networkIds","totalAUM","_args192","_context192","_ref300","_callee191","tvls","_context191","getAggregatedStats_chain","_x264","_callee196","avgAPR","_args196","_context196","_ref302","_callee195","_context195","_ref303","_callee194","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context194","_ref304","_callee193","_ref305","_ref306","_context193","_x267","_x266","_x265","getTokenApy","_ref307","_callee197","_context197","_x268","getTokensToMigrate","_callee200","tokensToMigrate","_args200","_context200","_ref309","_callee199","_context199","_ref310","_callee198","_ref311","_context198","_x270","_x269","getProtocolsTokensBalances","_callee202","tokenBalances","minTokenBalance","protocolsTokens","_args202","_context202","_ref313","_callee201","tokenContract","_context201","_x271","_ref314","_callee203","_args203","_context203","_x272","_x273","_x274","getAvgAPYStats","_ref315","_callee204","apiResults","_args204","_context204","_x275","_x276","_ref316","_callee205","count","_conversionRate","ToTokenConfig","_args205","_context205","_x277","_x278","getTokenScore","_ref317","_callee206","_ref318","_ref319","tokenScore","_context206","protocolScore","getTokenScoreApi","_x279","_x280","_ref320","_callee207","scores","_context207","_x281","_x282","_ref321","_callee208","idleGovTokenShowAPR","idleAPR","_args208","_context208","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","userHasFunds","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","batchInfo","redeemable","actionIcon","actionIconProps","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","paginationEnabled","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","env","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","skipMintForDeposit","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","isSupportedNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args","reload","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","_args7","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","_args25","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args27","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","contractInitialized","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.69b5dad0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks:[],\n    defaultNetwork:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks(){\n\n    if (!this.props.networkInitialized){\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const activeNetworks = enabledNetworks.map( networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value:networkId,\n        config:networkConfig,\n        label:networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find( network => network.value === requiredNetwork.id );\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId){\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized){\n      this.setState({\n        defaultNetwork:null\n      },() => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          px={0}\n        >\n          <Flex\n            {...props.innerProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px:1,\n          py:0,\n          height:'42px'\n        },this.props.innerProps)}\n        customOptionProps={{\n          px:0,\n          pl:3,\n          pr:0\n        }}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n      <DashboardCard\n        {...this.props}\n        cardProps={{\n          px:[2,3],\n          display:'flex',\n          width:[1,'auto'],\n          alignItems:'center',\n          justifyContent:'center',\n          height:(this.props.innerProps && this.props.innerProps.height) || '42px',\n        }}\n        isInteractive={false}\n      >\n        <Loader size={'20px'} />\n      </DashboardCard>\n    );\n  }\n}\n\nexport default NetworkIndicator;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // console.log('tokensData',tokensData);\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        // console.log('polygonTxs',polygonTxs);\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const currentNetworkId = this.getRequiredNetworkId();\n    const statsConfig = this.getGlobalConfig(['stats']);\n    const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(currentNetworkId);\n    if (!statsEnabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading || currentNetwork.id === 137){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n        1:[\"idleFEIYield\",\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"]\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1890,\n\t\"./testnet/mumbai/index.json\": 1891\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1890,\n\t\"./networks.json\": 1889,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1891\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      // console.log(networkId,this.state.network);\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n    // console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,web3InfuraRpc);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // console.log(`createContract: ${name} - addr: ${address}`);\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    if (contracts){\n      await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n        const contractInfo = contracts[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n        if (!foundGovTokenContract) {\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          await this.initContract(token, contractAddress, govTokenConfig.abi);\n        }\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n        const tokens = this.props.availableTranches[protocol];\n        await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n          const tokenConfig = tokens[token];\n          await Promise.all([\n            this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n            this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n            this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n            this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n            this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n            this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n          ]);\n        });\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\nimport NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            <Flex\n              ml={4}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens_2',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setToken={e => { this.setToken(e) }}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}